import telebot
from telebot import types
from config import *
import sqlite3


bot = telebot.TeleBot(token)

user_dict = {}

PRIVATE_CARD = '5168757413064025'

cigarettes = ['LM 55 –ì–†–ù', 'BOND 60 –ì–†–ù', 'MALBORO 50 –ì–†–ù']


class User:
    def __init__(self, room):
        self.room = room
        self.cigarete = None
        self.number = None
        self.comm = None


@bot.message_handler(commands=['start', 'help'])
def say_hello(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—éüëã.  –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã"
                                      " –∫—É–ø–∏—Ç—å —Å–∏–≥–∞—Ä–µ—Ç—ã, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É '/buy'. –í —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Çüïó, "
                                      "–ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, —Å–∏–≥–∞—Ä–µ—Ç—ã"
                                      " –±—É–¥—É—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É.")


@bot.message_handler(commands=['buy'])
def send_buy(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É')
    bot.register_next_step_handler(msg, process_room_step)


def process_room_step(message):
    if len(message.text) == 3:
        chat_id = message.chat.id
        room = message.text
        user = User(room)
        user_dict[chat_id] = user
        keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=True)
        lm = types.KeyboardButton(text=cigarettes[0])
        bond = types.KeyboardButton(text=cigarettes[1])
        malboro = types.KeyboardButton(text=cigarettes[2])
        keyboard.add(lm, bond, malboro)
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä', reply_markup=keyboard)
        bot.register_next_step_handler(msg, process_ciga_step)
    else:
        exception(message)


def process_ciga_step(message):
    chat_id = message.chat.id
    cigarete = message.text
    if cigarete in cigarettes:
        user = user_dict[chat_id]
        user.cigarete = cigarete
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω')
        bot.register_next_step_handler(msg, number_step)
    else:
        exception(message)


def number_step(message):
    chat_id = message.chat.id
    number = message.text
    user = user_dict[chat_id]
    if len(number) == 13 or len(number) == 12 or len(number) == 10:
        user.number = number
        keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=True)
        call = types.KeyboardButton(text='–ü–æ–∑–≤–æ–Ω–∏—Ç—å')
        write = types.KeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º')
        back = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑')
        keyboard.add(call, write, back)
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏', reply_markup=keyboard)
        bot.register_next_step_handler(msg, call_or_write)
    else:
        exception(message)


def call_or_write(message):
    chat_id = message.chat.id
    comm = message.text
    user = user_dict[chat_id]
    if comm == '–ü–æ–∑–≤–æ–Ω–∏—Ç—å' or comm == '–ù–∞–ø–∏—Å–∞—Ç—å –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º':
        user.comm = comm
        cost = 0
        if user.cigarete == cigarettes[0]:
            cost = str(55)
        elif user.cigarete == cigarettes[1]:
            cost = str(60)
        elif user.cigarete == cigarettes[2]:
            cost = str(50)
        else:
            exception(message)
        bot.send_message(message.chat.id, '–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –í —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç –≤–∞–º –ø–æ–∑–≤–æ–Ω–∏—Ç –∏–ª–∏ –Ω–∞–ø–∏—à–µ—Ç'
                                          ' –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.'
                                          f' –ü–æ—Å–ª–µ –∑–≤–æ–Ω–∫–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ {cost} –ì–†–ù')
        bot.send_message(message.chat.id, f'PRIVATE: {PRIVATE_CARD}\nMONOBANK: {PRIVATE_CARD}')
        database(message.chat.id, user.room, user.cigarete, user.number, user.comm)
    elif comm == '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑':
        bot.send_message(message.chat.id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω.')
    else:
        exception(message)


bot.enable_save_next_step_handlers(delay=3)

bot.load_next_step_handlers()


@bot.message_handler(content_types='text')
def all_text(message):
    bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω–∏–º–∞—é. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /buy –∏ –ø–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞")


def database(userid, room, cigaretes, number, comm):
    conn = sqlite3.connect("orders.db")
    cursor = conn.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS orders
                      (id TEXT, room TEXT, cigaretes TEXT, number TEXT, communication TEXT)
                   """)
    conn.commit()
    cursor.execute(f"INSERT INTO orders VALUES (?, ?, ?, ?, ?)", (userid, room, cigaretes, number, comm))
    conn.commit()
    bot.send_message(614377323, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n–ê–π–¥–∏: {userid}\n–ö–æ–º–Ω–∞—Ç–∞: {room}\n–°–∏–≥–∞—Ä–µ—Ç—ã: {cigaretes}\n–ù–æ–º–µ—Ä: {number}\n'
                                f'–°–ø–æ—Å–æ–± –∫–æ–Ω—Ç–∞–∫—Ç–∞: {comm}')


def exception(message):
    bot.send_message(message.chat.id, '–£–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω—ã. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /buy –∏ –ø–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞')


if __name__ == '__main__':
    bot.polling()